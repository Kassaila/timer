/**Developed by Dmytro Symonov
 * {s} symonov.com
 * 2019
 */
function timer(e) { const t = document.querySelector(e.idTimer), d = { sec: t.querySelector(".seconds"), min: t.querySelector(".minutes"), hour: t.querySelector(".hours"), day: t.querySelector(".days"), msg: t.querySelector(".message") }; for (let a in d) void 0 !== e.spanClass && void 0 !== e.spanClass[a] && "string" == typeof e.spanClass[a] && "" !== e.spanClass[a] && (d[a] = t.querySelector("." + e.spanClass[a])); const a = () => new Date, n = () => Math.floor(a().getTime() / 1e3), i = () => f() - n(), o = () => i() % 60, r = () => (i() - o()) / 60 % 60, s = () => ((i() - o()) / 60 - r()) / 60 % 24; e.deadLine.startDate = void 0 !== e.deadLine.startDate && !0 === Array.isArray(e.deadLine.startDate) ? e.deadLine.startDate : void 0, e.deadLine.endDate = void 0 !== e.deadLine.endDate && !0 === Array.isArray(e.deadLine.endDate) ? e.deadLine.endDate : void 0; const L = { turnLoop: void 0 !== e.deadLine.turnLoop && "boolean" == typeof e.deadLine.turnLoop && e.deadLine.turnLoop, loopDays: void 0 !== e.deadLine.loopDays && "number" == typeof e.deadLine.loopDays && e.deadLine.loopDays > 0 ? e.deadLine.loopDays : 1, pauseDays: void 0 !== e.deadLine.pauseDays && "number" == typeof e.deadLine.pauseDays && e.deadLine.pauseDays > 0 ? e.deadLine.pauseDays : 0, timeZone: void 0 !== e.deadLine.timeZone && "number" == typeof e.deadLine.timeZone && e.deadLine.timeZone >= -12 && e.deadLine.timeZone <= 14 ? e.deadLine.timeZone : -1 * a().getTimezoneOffset() / 60, startMin: void 0 !== e.deadLine.startTime && void 0 !== e.deadLine.startTime[1] && "number" == typeof e.deadLine.startTime[1] && e.deadLine.startTime[1] >= 0 && e.deadLine.startTime[1] < 60 ? e.deadLine.startTime[1] : 0, startHour: void 0 !== e.deadLine.startTime && void 0 !== e.deadLine.startTime[0] && "number" == typeof e.deadLine.startTime[0] && e.deadLine.startTime[0] >= 0 && e.deadLine.startTime[0] <= 24 ? e.deadLine.startTime[0] : 0, startDay: void 0 !== e.deadLine.startDate && void 0 !== e.deadLine.startDate[0] && "number" == typeof e.deadLine.startDate[0] && e.deadLine.startDate[0] > 0 && e.deadLine.startDate[0] <= 31 ? e.deadLine.startDate[0] : a().getDate(), startMonth: void 0 !== e.deadLine.startDate && void 0 !== e.deadLine.startDate[1] && "number" == typeof e.deadLine.startDate[1] && e.deadLine.startDate[1] > 0 && e.deadLine.startDate[1] <= 12 ? e.deadLine.startDate[1] - 1 : a().getMonth(), startYear: void 0 !== e.deadLine.startDate && void 0 !== e.deadLine.startDate[2] && "number" == typeof e.deadLine.startDate[2] && e.deadLine.startDate[2] >= 0 ? e.deadLine.startDate[2] : a().getFullYear(), endMin: void 0 !== e.deadLine.endTime && void 0 !== e.deadLine.endTime[1] && "number" == typeof e.deadLine.endTime[1] && e.deadLine.endTime[1] >= 0 && e.deadLine.endTime[1] < 60 ? e.deadLine.endTime[1] : 0, endHour: void 0 !== e.deadLine.endTime && void 0 !== e.deadLine.endTime[0] && "number" == typeof e.deadLine.endTime[0] && e.deadLine.endTime[0] >= 0 && e.deadLine.endTime[0] <= 24 ? e.deadLine.endTime[0] : 0, endDay: void 0 !== e.deadLine.endDate && void 0 !== e.deadLine.endDate[0] && "number" == typeof e.deadLine.endDate[0] && e.deadLine.endDate[0] > 0 && e.deadLine.endDate[0] <= 31 ? e.deadLine.endDate[0] : a().getDate(), endMonth: void 0 !== e.deadLine.endDate && void 0 !== e.deadLine.endDate[1] && "number" == typeof e.deadLine.endDate[1] && e.deadLine.endDate[1] > 0 && e.deadLine.endDate[1] <= 12 ? e.deadLine.endDate[1] - 1 : a().getMonth(), endYear: void 0 !== e.deadLine.endDate && void 0 !== e.deadLine.endDate[2] && "number" == typeof e.deadLine.endDate[2] && e.deadLine.endDate[2] >= 0 ? e.deadLine.endDate[2] : a().getFullYear() }, u = { msgOutput: !1, toStartMsg: "", toEndMsg: "", errMsg: "" }; for (let t in u) void 0 !== e.textMsg && void 0 !== e.textMsg[t] && (u[t] = e.textMsg[t]); const m = e => { !0 === u.msgOutput && (d.msg.innerHTML = e) }, D = new Date(L.startYear, L.startMonth, L.startDay, L.startHour, L.startMin), y = new Date(L.endYear, L.endMonth, L.endDay, L.endHour, L.endMin), p = 3600 * (L.timeZone + a().getTimezoneOffset() / 60), l = Math.floor(D.getTime() / 1e3) - p, T = Math.floor(y.getTime() / 1e3) - p, v = 3600 * (L.startHour > L.endHour ? L.startHour - L.endHour : 24 - (L.endHour - L.startHour)) + 60 * L.startMin - 60 * L.endMin; let c, M; const f = () => { if (l >= n()) return l; if (l < n() && !0 === L.turnLoop) { let e; for (e = l; e < n(); e += 86400 * (L.loopDays + L.pauseDays)); return M = e, (c = e - 86400 * L.pauseDays - v) - n() < 0 ? M : c } return T > n() && !1 === L.turnLoop ? T : n() }, g = () => { d.sec.innerHTML = o() > 9 ? o() : "0" + o(), 0 !== g.count && 0 !== o() || setTimeout(() => d.min.innerHTML = r() > 9 ? r() : "0" + r(), g.count), (0 === g.count || 0 === o() && 0 === r()) && setTimeout(() => d.hour.innerHTML = s() > 9 ? s() : "0" + s(), g.count), (0 === g.count || 0 === o() && 0 === r() && 0 === s()) && setTimeout(() => d.day.innerHTML = (() => Math.floor(((i() - o()) / 60 - r()) / 60 / 24))(), g.count), (0 === g.count || i() <= 0) && (g.count = 1e3, l > n() ? m(u.toStartMsg) : l <= n() && !0 === L.turnLoop ? c - n() <= 0 ? (m(u.errMsg), void 0 !== e.timerCallback && e.timerCallback()) : m(u.toEndMsg) : T > n() && !1 === L.turnLoop ? m(u.toEndMsg) : (m(u.errMsg), void 0 !== e.timerCallback && e.timerCallback())) }; g.count = 0, g(); const b = setInterval(() => { T < n() && !1 === L.turnLoop ? clearInterval(b) : g() }, 1e3) }